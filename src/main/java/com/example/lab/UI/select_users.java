package com.example.lab.UI;
import com.example.lab.Controller.BasicEquipmentController;
import com.example.lab.Entity.Equipment;
import com.example.lab.Util.ApplicationContextUtil;
import com.jgoodies.forms.layout.CellConstraints;
import com.jgoodies.forms.layout.FormLayout;

import javax.swing.*;
import javax.swing.plaf.FontUIResource;
import javax.swing.table.DefaultTableModel;
import javax.swing.text.StyleContext;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.List;
import java.util.Locale;

public class select_users {
    static JFrame frame = new JFrame("select_users");
    private JButton is_user;
    private JButton dl_user;
    private JButton ud_user;
    private JButton 返回Button;
    private JTable table1;
    private JPanel root;

    public select_users() {
        is_user.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                closepage();
                new insert_user().init();

            }
        });
        dl_user.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                closepage();new delect_user().init();
            }
        });
        ud_user.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                closepage(); new update_user().init();
            }
        });
        返回Button.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                closepage();
                new select_equipment().init();
            }
        });
    }

    public void init() {

        frame.setContentPane(new select_users().root);
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        frame.pack();
        frame.setVisible(true);
    }

    public select_users printform(select_users se) {
        // 表格上的title
        String[] columnNames = new String[]{"", "设备名称", "设备类型", "入库时间","数量","单价","产地","备注"};

        return se;
    }


    public void closepage() {
        frame.dispose();
    }

    public static void main(String[] args) {
        new select_users().init();
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        root = new JPanel();
        root.setLayout(new FormLayout("fill:d:grow", "center:d:grow"));
        final JPanel panel1 = new JPanel();
        panel1.setLayout(new FormLayout("fill:120px:noGrow,left:4dlu:noGrow,fill:max(d;4px):noGrow,left:150dlu:noGrow,fill:8px:noGrow,fill:151dlu:noGrow", "center:79px:noGrow,top:43dlu:noGrow,top:36dlu:noGrow,center:40dlu:noGrow,top:15dlu:noGrow,center:13dlu:noGrow,top:30dlu:noGrow,center:max(d;4px):noGrow,center:max(d;4px):noGrow"));
        panel1.setBackground(new Color(-4272661));
        CellConstraints cc = new CellConstraints();
        root.add(panel1, cc.xy(1, 1, CellConstraints.DEFAULT, CellConstraints.FILL));
        is_user = new JButton();
        is_user.setText("新增用户");
        panel1.add(is_user, cc.xy(1, 2, CellConstraints.FILL, CellConstraints.CENTER));
        dl_user = new JButton();
        dl_user.setText("删除用户");
        panel1.add(dl_user, cc.xy(1, 3, CellConstraints.FILL, CellConstraints.CENTER));
        final JScrollPane scrollPane1 = new JScrollPane();
        panel1.add(scrollPane1, cc.xywh(4, 2, 3, 6, CellConstraints.FILL, CellConstraints.FILL));
        table1 = new JTable();
        scrollPane1.setViewportView(table1);
        返回Button = new JButton();
        返回Button.setText("返回");
        panel1.add(返回Button, cc.xy(1, 7, CellConstraints.CENTER, CellConstraints.CENTER));
        ud_user = new JButton();
        ud_user.setText("修改用户信息");
        panel1.add(ud_user, cc.xy(1, 4, CellConstraints.FILL, CellConstraints.CENTER));
        final JLabel label1 = new JLabel();
        Font label1Font = this.$$$getFont$$$(null, Font.BOLD, 26, label1.getFont());
        if (label1Font != null) label1.setFont(label1Font);
        label1.setForeground(new Color(-3770255));
        label1.setText("查看用户信息");
        panel1.add(label1, cc.xyw(4, 1, 3, CellConstraints.CENTER, CellConstraints.DEFAULT));
    }

    /**
     * @noinspection ALL
     */
    private Font $$$getFont$$$(String fontName, int style, int size, Font currentFont) {
        if (currentFont == null) return null;
        String resultName;
        if (fontName == null) {
            resultName = currentFont.getName();
        } else {
            Font testFont = new Font(fontName, Font.PLAIN, 10);
            if (testFont.canDisplay('a') && testFont.canDisplay('1')) {
                resultName = fontName;
            } else {
                resultName = currentFont.getName();
            }
        }
        Font font = new Font(resultName, style >= 0 ? style : currentFont.getStyle(), size >= 0 ? size : currentFont.getSize());
        boolean isMac = System.getProperty("os.name", "").toLowerCase(Locale.ENGLISH).startsWith("mac");
        Font fontWithFallback = isMac ? new Font(font.getFamily(), font.getStyle(), font.getSize()) : new StyleContext().getFont(font.getFamily(), font.getStyle(), font.getSize());
        return fontWithFallback instanceof FontUIResource ? fontWithFallback : new FontUIResource(fontWithFallback);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return root;
    }

}
