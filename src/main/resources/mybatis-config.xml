<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE configuration
        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-config.dtd">
<configuration>
    <!--
     "(properties?,settings?,typeAliases?,typeHandlers?,objectFactory?,
     objectWrapperFactory?,reflectorFactory?,plugins?,environments?
     ,databaseIdProvider?,mappers?)".
    -->
    <properties resource = "jdbc.properties"></properties>
    <!--设置mybatis的全局配置-->
    <settings>
        <!--将—— 自动映射为驼峰，emp_name 映射为 empName-->
        <setting name="mapUnderscoreToCamelCase" value="true"/>
        <!--开启延时加载-->
        <setting name="lazyLoadingEnabled" value="true"/>
    </settings>


    <!--
    设置类型别名 alias 类型别名
    type 设置别名的类型
    -->
    <typeAliases>
<!--        <typeAlias type = "com.daniccy.mybatis.pojo.User" alias="user"></typeAlias>-->
<!--        以包为单位，将报下的所有类型设置默认的类型别名，即类名不区分大小写，比如user 直接变为user-->
        <package name="com.example.lab.Entity" />
    </typeAliases>


    <plugins>
        <!--设置分页插件-->
        <plugin interceptor="com.github.pagehelper.PageInterceptor"></plugin>
    </plugins>


    <!-- environments 配置连接数据库的环境
    defallt:设置默认的环境
    -->
    <environments default="development">
        <!-- environments 配置特定的环境
    defallt:设置默认的环境
    -->
        <environment id="development">
            <!--
            transactionManager 事务管理方式 JDBC | MANAGED
            JDBC : 标识但概念环境中，执行sql，使用jdbc原生的事务管理方式，事务提交或者回滚需要手动提交
            MANAGED： 被管理，例如spring
            -->
            <transactionManager type="MANAGED"/>
            <!--
              Datasource ： 数据源
              type ： 数据源类型
              POOLED | UNPOOLED | JNDI
              POOLED 数据库连接池缓存数据库连接
              UNPOOLED 不用数据库连接池缓存数据库连接
              JNDI 使用上下文的数据源
            -->
            <dataSource type="UNPOOLED">
                <!--设置连接数据库的驱动-->
                <property name="driver" value="${jdbc.driver}"/>
<!--                设置连接数据库的地址-->
                <property name="url" value="${jdbc.url}"/>
                <property name="username" value="${jdbc.username}"/>
                <property name="password" value="${jdbc.password}"/>
            </dataSource>
        </environment>
    </environments>
    <!--映入映射文件-->
    <mappers>
        <!--以包为单位的映射
        要求： mapper接口所在的包要和映射文件所在的包一致
              mapper接口要和映射问津的i拿工资一样
        -->
                <package name="com.example.lab.Mapper" />
    </mappers>
</configuration>